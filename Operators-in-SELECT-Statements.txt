Operators in SELECT Statements


1.	Write out a generic SELECT statement.
        SELECT <column4>
        FROM <table3>
        WHERE <the condition I am searching for>

2.	Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.
	      SIX (SELECT)
	      FAT (FROM)
        WOMEN (WHERE)
        GET (GROUP BY)
        HUNGRY (HAVING)
        OFTEN (ORDER BY)

3.	Given this dogs table, write queries to select the following pieces of data:
Intake teams typically guess the breed of shelter dogs, so the breed column may have multiple words (for example, "Labrador Collie mix").

•	Display the name, gender, and age of all dogs that are part Labrador.
      SELECT name, gender, age
	    FROM dogs
      WHERE breed LIKE ‘%Labrador%’;

•	Display the ids of all dogs that are under 1 year old.
      SELECT id
      FROM dogs
      WHERE age < 1;

•	Display the name and age of all dogs that are female and over 35lbs.
      SELECT name, age
      FROM dogs
      WHERE gender=female AND weight > 35;

•	Display all of the information about all dogs that are not Shepherd mixes.
      SELECT *
      FROM dogs
      WHERE breed NOT LIKE ‘%Shepherd%’;

•	Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.
      SELECT id, age, weight, breed
      FROM dogs
      WHERE weight > 60 OR breed=’Great Dane’;

4.	Given this cats table, what records are returned from these queries?

•	SELECT name, adoption_date FROM cats;
      name: Mushi
      adoption_date: 2016-03-22

      name:Seashell
      adoption_date: null

      name: Azul
      adoption_date: 2016-04-17

      name: Victoire
      adoption_date: 2016-09-01

      name: Nala
      adoption_date: null

•	SELECT name, age FROM cats;

	   name:Mushi
     age:1

     name: Seashell
     age:7

     name:Azul
     age:3

     name:Victoire
     age:7

     name:Nala
    age:1

5.	From the cats table, write queries to select the following pieces of data.

•	Display all the information about all of the available cats.

      SELECT *
      FROM cats

•	Display the name and sex of all cats who are 7 years old.

      SELECT name, sex
      FROM cats
      WHERE age=7;

•	Find all of the names of the cats, so you don’t choose duplicate names for new cats.

      SELECT name
      FROM cats

6.	List each comparison operator and explain when you would use it. Include a real world example for each.

•	less than ( < )
      1.	We would use less than when trying to get to data that is less than a certain amount.
      2.	For Example: If we want to find all people whose age is less than 18. Ex. people < 18
•	greater than ( > )
      1.	We would use greater than when trying to access data that is greater than a certain amount.
      2.	For Example: If we want to find all people who more than 1 pet.
•	less than or equal to ( <= )
      1.	We would use this when trying to access values that are less than or equal to that value.
      2.	For Example: We want to access people that are 18 or younger.
•	Greater than or equal to ( >=)
      1.	We would use this when trying to access values that are greater than or equal to a certain value.
      2.	For Example: if we wat to find all people who have at least 1 or more pets.
•	not equal to ( != or <> )
      1.	We would use this when we want find all data other than what we specify in our not equal to.
      2.	For example, We want to all the data from anyone except those who have a pet.
•	equal to ( = )
      1.	We would use this we want to find data equal to a specific value.
      2.	For example: We want to find data on the people whose name is equal to Randy
•	If you can’t list these from memory, do these flashcards until you can!

7.	From the cats table, what data is returned from these queries?
• SELECT name FROM cats WHERE gender = ‘F’;
      Name: Seashell, Nala

•	SELECT name FROM cats WHERE age <> 3;
      Name: Mushi, Seashell, Victoire, Nala

•	SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;
      Id: 3, 4
